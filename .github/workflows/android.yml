name: build-apk
on: { workflow_dispatch: {}, push: {} }

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '17' }

      - uses: android-actions/setup-android@v3

      - name: install android sdks
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: get gradle 8.7
        run: |
          curl -L -o gradle.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
          unzip -q gradle.zip
          ./gradle-8.7/bin/gradle -v

      - name: build debug apk (full logs)
        run: |
          ./gradle-8.7/bin/gradle --no-daemon clean :app:assembleDebug --stacktrace --info | tee build.log

      - name: list outputs (tree + any apks)
        if: always()
        run: |
          echo "== outputs tree =="
          ls -R app/build/outputs || true
          echo "== any *.apk files =="
          find "$PWD" -type f -name "*.apk" -print || true

      - name: verify apk exists (robust)
        run: |
          set -e
          APK_PATH="$(find "$PWD" -type f -name "*.apk" | grep '/build/outputs/apk/' | head -n 1 || true)"
          if [ -z "$APK_PATH" ]; then
            echo "no APK produced under **/build/outputs/apk/**"; exit 2
          fi
          echo "APK=$APK_PATH" | tee apk_path.txt
          ls -lh "$APK_PATH"
          sha256sum "$APK_PATH" | tee apk_sha256.txt
          mkdir -p release && cp "$APK_PATH" release/

      - name: upload apk
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: release/*.apk
          if-no-files-found: error

      - name: upload build diagnostics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: |
            build.log
            apk_path.txt
            apk_sha256.txt
          if-no-files-found: warn
